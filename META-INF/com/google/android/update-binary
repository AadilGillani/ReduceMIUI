#!/sbin/sh
TMPDIR=/dev/tmp
INSTALLER=$TMPDIR/install
MOUNTPATH=$TMPDIR/magisk_img
umask 022
rm -rf $TMPDIR 2>/dev/null
mkdir -p $INSTALLER
ui_print() { echo "$1"; }
require_new_magisk() {
  ui_print "*******************************"
  ui_print " 请安装 Magisk v17.0+ ! "
  ui_print "*******************************"
  exit 1
}
OUTFD=$2
ZIP=$3
mount /data 2>/dev/null
if [ -f /data/adb/magisk/util_functions.sh ]; then
  . /data/adb/magisk/util_functions.sh
elif [ -f /data/magisk/util_functions.sh ]; then
  NVBASE=/data
  . /data/magisk/util_functions.sh
else
  require_new_magisk
fi
$BOOTMODE && IMG=$NVBASE/magisk_merge.img

setup_flashable

mount_partitions

api_level_arch_detect

$BOOTMODE && boot_actions || recovery_actions
unzip -o "$ZIP" module.prop config.sh 'common/*' -d $INSTALLER >&2
[ ! -f $INSTALLER/config.sh ] && abort "! 从 zip 中提取文件失败!"
. $INSTALLER/config.sh
MIN_VER=`grep_prop minMagisk $INSTALLER/module.prop`
[ ! -z $MAGISK_VER_CODE -a $MAGISK_VER_CODE -ge $MIN_VER ] || require_new_magisk
MODID=`grep_prop id $INSTALLER/module.prop`
MODPATH=$MOUNTPATH/$MODID
print_modname
costom_setttings
request_zip_size_check "$ZIP"
mount_magisk_img
rm -rf $MODPATH 2>/dev/null
mkdir -p $MODPATH
ui_print "- 正在解压模块文件"
unzip -o "$ZIP" 'system/*' -d $MODPATH >&2
rm -f $MODPATH/system/placeholder 2>/dev/null
for TARGET in $REPLACE; do
  mktouch $MODPATH$TARGET/.replace
done
$AUTOMOUNT && touch $MODPATH/auto_mount
$PROPFILE && cp -af $INSTALLER/common/system.prop $MODPATH/system.prop
cp -af $INSTALLER/module.prop $MODPATH/module.prop
if $BOOTMODE; then
  mktouch /sbin/.core/img/$MODID/update
  cp -af $INSTALLER/module.prop /sbin/.core/img/$MODID/module.prop
fi
$POSTFSDATA && cp -af $INSTALLER/common/post-fs-data.sh $MODPATH/post-fs-data.sh
$LATESTARTSERVICE && cp -af $INSTALLER/common/service.sh $MODPATH/service.sh
ui_print "- 正在设置权限"
set_permissions
unmount_magisk_img
$BOOTMODE || recovery_cleanup
rm -rf $TMPDIR
ui_print "- 完成"
exit 0